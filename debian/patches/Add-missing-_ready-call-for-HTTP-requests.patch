From 080cf03bd5ce78f42179d409ed5ff10ac696b8fb Mon Sep 17 00:00:00 2001
From: Jakub Adam <jakub.adam@ktknet.cz>
Date: Sun, 4 Mar 2018 20:21:32 +0100
Subject: [PATCH] Add missing _ready() call for HTTP requests

Consists of upstream commits:
 e7ea3323acb7c3ba5af7c78fc77818ecde65805d
 0f553d195669e5beb0e9d61d7d801707ebb177cb
 94711842e579822cae2825a1ed9834c0ee17c0a5
---
 src/core/sipe-conf.c              | 20 ++++++++++++++------
 src/core/sipe-http-request.c      | 26 +++++++++++++++++++++-----
 src/core/sipe-lync-autodiscover.c |  5 ++++-
 3 files changed, 39 insertions(+), 12 deletions(-)

diff --git a/src/core/sipe-conf.c b/src/core/sipe-conf.c
index 4efdaacf..6056da19 100644
--- a/src/core/sipe-conf.c
+++ b/src/core/sipe-conf.c
@@ -430,17 +430,25 @@ static void sipe_conf_lync_url_cb(struct sipe_core_private *sipe_private,
 static gboolean sipe_conf_check_for_lync_url(struct sipe_core_private *sipe_private,
 					     gchar *uri)
 {
+	struct sipe_http_request *request;
+
 	if (!(g_str_has_prefix(uri, "https://") ||
 	      g_str_has_prefix(uri, "http://")))
 		return(FALSE);
 
 	/* URL points to a HTML page with the conference focus URI */
-	return(sipe_http_request_get(sipe_private,
-				     uri,
-				     NULL,
-				     sipe_conf_lync_url_cb,
-				     uri)
-	       != NULL);
+	request = sipe_http_request_get(sipe_private,
+					uri,
+					NULL,
+					sipe_conf_lync_url_cb,
+					uri);
+
+	if (request) {
+		sipe_http_request_ready(request);
+		return(TRUE);
+	}
+
+	return(FALSE);
 }
 
 static void sipe_conf_uri_error(struct sipe_core_private *sipe_private,
diff --git a/src/core/sipe-http-request.c b/src/core/sipe-http-request.c
index 292ec261..8a688c2e 100644
--- a/src/core/sipe-http-request.c
+++ b/src/core/sipe-http-request.c
@@ -3,7 +3,7 @@
 *
  * pidgin-sipe
  *
- * Copyright (C) 2013-2016 SIPE Project <http://sipe.sourceforge.net/>
+ * Copyright (C) 2013-2018 SIPE Project <http://sipe.sourceforge.net/>
  *
  *
  * This program is free software; you can redistribute it and/or modify
@@ -522,12 +522,28 @@ void sipe_http_request_shutdown(struct sipe_http_connection_public *conn_public,
 {
 	if (conn_public->pending_requests) {
 		GSList *entry = conn_public->pending_requests;
+		guint status = abort ?
+			SIPE_HTTP_STATUS_ABORTED :
+			SIPE_HTTP_STATUS_FAILED;
+		gboolean warn = conn_public->connected && !abort;
 		while (entry) {
+			struct sipe_http_request *req = entry->data;
+
+			if (warn) {
+				SIPE_DEBUG_ERROR("sipe_http_request_shutdown: pending request at shutdown: could indicate missing _ready() call on request. Debugging information:\n"
+						 "Host:   %s\n"
+						 "Port:   %d\n"
+						 "Path:   %s\n"
+						 "Method: %s\n",
+						 conn_public->host,
+						 conn_public->port,
+						 req->path,
+						 req->body ? "POST" : "GET");
+			}
+
 			sipe_http_request_free(conn_public->sipe_private,
-					       entry->data,
-					       abort ?
-					       SIPE_HTTP_STATUS_ABORTED :
-					       SIPE_HTTP_STATUS_FAILED);
+					       req,
+					       status);
 			entry = entry->next;
 		}
 		g_slist_free(conn_public->pending_requests);
diff --git a/src/core/sipe-lync-autodiscover.c b/src/core/sipe-lync-autodiscover.c
index c083f2e9..aa58ba5a 100644
--- a/src/core/sipe-lync-autodiscover.c
+++ b/src/core/sipe-lync-autodiscover.c
@@ -3,7 +3,7 @@
  *
  * pidgin-sipe
  *
- * Copyright (C) 2016-2017 SIPE Project <http://sipe.sourceforge.net/>
+ * Copyright (C) 2016-2018 SIPE Project <http://sipe.sourceforge.net/>
  *
  *
  * This program is free software; you can redistribute it and/or modify
@@ -106,6 +106,9 @@ static void lync_request(struct sipe_core_private *sipe_private,
 						 headers ? headers : LYNC_AUTODISCOVER_ACCEPT_HEADER,
 						 sipe_lync_autodiscover_cb,
 						 request);
+
+	if (request->request)
+		sipe_http_request_ready(request->request);
 }
 
 static GSList *sipe_lync_autodiscover_add(GSList *servers,
-- 
2.16.1

